@model EventsApp.Models.Event

@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <style>
        /* Style for the whole form container */
        .form-container {
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            background-color: #fff;
            margin: 20px auto;
            max-width: 400px;
        }

        /* Style for form labels */
        .form-label {
            font-weight: bold;
            margin-bottom: 5px;
        }

        /* Style for form input fields */
        .form-outline {
            position: relative;
            margin-bottom: 20px;
        }

        .form-control {
            color: white;
            
            width: 100%;
            padding: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
            outline: none;
            transition: border-color 0.3s ease;
        }

            .form-control:focus {
                color: white;
                border-color: #007bff;
            }

        /* Style for select dropdown */
        select.form-control {
            color: white;
            appearance: none;
            -webkit-appearance: none;
            -moz-appearance: none;
            background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='12' height='6'><polygon fill='%23333' points='0,0 12,0 6,6'/></svg>");
            background-position: calc(100% - 8px) center;
            background-repeat: no-repeat;
        }

        /* Style for buttons */
        .btn {
            display: inline-block;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        .btn-primary {
            background-color: #007bff;
            color: #fff;
        }

        .btn-success {
            background-color: #28a745;
            color: #fff;
        }

        .btn-outline-dark {
            background-color: transparent;
            border: 1px solid #343a40;
            color: #343a40;
        }

        /* Style for image upload section */
        .image-upload {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
        }

            .image-upload label {
                background-color: #007bff;
                color: #fff;
                padding: 10px 20px;
                border-radius: 5px;
                cursor: pointer;
                margin-right: 10px;
            }

        .custom-file-input {
            position: absolute;
            clip: rect(0, 0, 0, 0);
            pointer-events: none;
        }
        body{
            background-image: url('https://cdn.wallpapersafari.com/18/0/GaV1hU.jpg');
            background-size:cover;
            background-repeat:no-repeat;        
        }

        h1 {
            --fill-color: #198CE6;
            text-align:center;
            position: relative;
            display: block;
            padding: 4px 0;
            font: 700 3rem Raleway, sans-serif;
            text-decoration: none;
            text-transform: uppercase;
            -webkit-text-stroke: 2px var(--fill-color);
            background: linear-gradient(var(--fill-color) 0 100%) left / 0 no-repeat;
            color: white;
            background-clip: text;
            transition: 0.5s linear;
        }

            h1:hover {
                color: blue;
            }
            *{color:white}
    </style>
</head>


<body >
<h1>Create Event</h1>


<hr />
<div class="row justify-content-center">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-outline mt-4">
@*                    <input asp-for="Id" type="hidden" id="form12" class="form-control" value="@ViewBag.EventId" />
*@                <input asp-for="Name" type="text" id="form12" class="form-control" />
                <label asp-for="Name" class="form-label" for="form12">Title</label>

                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-outline mt-4">
                <input asp-for="Description" id="form12" class="form-control" />
                <label asp-for="Description" class="form-label" for="form12">Description</label>

                <span asp-validation-for="Description" class="text-danger"></span>
            </div>

            
            <div class="form-outline mt-4">
                <input asp-for="StartDate" id="form12" class="form-control form-check-inline"/>

                <label asp-for="StartDate" class="form-label form-check-inline" for="form12"></label>

                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>
            <div class="form-outline mt-4">
                <input asp-for="EndDate" id="form12" class="form-control" />
                <label asp-for="EndDate" class="form-label" for="form12"></label>

                <span asp-validation-for="EndDate" class="text-danger"></span>
            </div>
            <label asp-for="CategoryId" class="control-label"></label>
            <select asp-for="CategoryId" class="form-control">
                @foreach (var item in ViewBag.Categories)
                {
                    <option value="@(item.Id)">@(item.Name)</option>
                }
            </select>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="Accepted" /> @Html.DisplayNameFor(model => model.Accepted)
                </label>
            </div>

            <input type="file" accept="image/*" class="btn btn-outline-dark pt-1 pb-1" multiple id="imageInput" name="imageFiles" />
            <input type="hidden" id="base64ImageData" name="base64ImageData" />

            <button type="button" id="getImagesButton" class="btn btn-success ">Upload Images</button>
            <div class="form-group row justify-content-center mt-3">
                <div class="col-4">

                    <input type="submit" value="Login" class="btn btn-primary " />
                </div>
                <div class="col-4 text-center align-self-center">
                    <a asp-action="Index">Back to List</a>
                </div>
            </div>

           

  
            </form>
    </div>
</div>

</body>

<script>
    document.getElementById("getImagesButton").addEventListener("click", function () {
        getImages(function (base64Images) {
            document.getElementById("base64ImageData").value = JSON.stringify(base64Images);
        });
    });

    document.getElementById("eventForm").addEventListener("submit", function () {
        // Ensure that the form submission handler gets the latest base64ImageData value
        document.getElementById("base64ImageData").value = JSON.stringify(base64Images);
    });

    function getImages(callback) {
        var base64Images = [];
        const inputElement = document.getElementById("imageInput");
        const selectedFiles = inputElement.files;

        if (selectedFiles.length > 0) {
            let filesProcessed = 0;

            for (const file of selectedFiles) {
                const reader = new FileReader();

                reader.onload = function (event) {
                    const base64Data = event.target.result.split(",")[1];
                    base64Images.push(base64Data);
                    filesProcessed++;

                    if (filesProcessed === selectedFiles.length) {
                        // All files have been processed, call the callback
                        callback(base64Images);
                    }
                };

                reader.readAsDataURL(file);
            }
        } else {
            // No files selected, call the callback with an empty array
            callback(base64Images);
        }
    }
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
